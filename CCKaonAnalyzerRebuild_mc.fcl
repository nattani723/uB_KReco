#include "time_memory_tracker_microboone.fcl"
#include "services_microboone.fcl"
#include "microboone_eventweight_service.fcl"

#include "detectorclocks.fcl" 
#include "detectorproperties.fcl" 
#include "geometry.fcl" 
#include "larproperties.fcl" 
#include "services_microboone_basic.fcl"
#include "config_particle_identification.fcl"
#include "config_particle_identification_fiducialvolume.fcl"
#include "config_particle_identification_braggalgo.fcl"
#include "config_particle_identification_producerlabels.fcl"
#include "shrreco3d.fcl"

process_name: CCKaonAnalyzerRebuild

services:
{
  #Load the service that manages root files for histograms.
  TFileService: { fileName: "CCKaonAnalyzerRebuild.root" }
  @table::microboone_services_reco
  RandomNumberGenerator: {}                     #ART native random number generator
  @table::microboone_simulation_services
  #message:                  @local::standard_warning
  #FileCatalogMetadata:      @local::art_file_catalog_mc
  SpaceCharge:              @local::microboone_spacecharge
  DetectorClocksService:    @local::microboone_detectorclocks
  #UBEventWeight:            @local::microboone_eventweight_service
  #NuRandomService: @local::microboone_seedservice

}

services.SpaceCharge.EnableCorrSCE:       true
services.SpaceCharge.EnableSimEfieldSCE:  true
services.SpaceCharge.EnableSimSpatialSCE: true
services.DetectorClocksService.InheritClockConfig: false
services.DetectorClocksService.TriggerOffsetTPC: -0.400e3
services.DetectorPropertiesService.NumberTimeSamples: 6400
services.DetectorPropertiesService.ReadOutWindowSize: 6400

#source is now a root file
source:
{
  module_type: RootInput
  maxEvents:  -1            # Number of events to create
}

source.inputCommands: [ "keep *_*_*_*", "drop *_opfiltercommon__McRecoStage1" ]

outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName: "CCKaonAnalyzerRebuildStream.root"    #default file name, can override from command line with -o or --output
   dataTier: "reconstructed"
   fastCloning: false
 } 
}

physics:
{
  producers:
  {
  #eventweight: @local::microboone_eventweight
  #rns: {
     #module_type: "RandomNumberSaver"
   #}
  }

  filters:{} 

  analyzers:
  {
    CCKaonAnalyzerRebuild:
    {
      module_type:    "CCKaonAnalyzerRebuild"
      PandoraLabel:   "pandora"	
      TrackLabel:     "pandora"
      ShowerLabel:    "pandora"
      ParticleIDLabel:"pid"
      CaloLabel:      "pandoracaliSCE"
      FlashLabel:     "simpleFlashBeam"
      POTLabel:       "generator" 
      truthmatching_signaldef : "ncdelta"

      gain_mc: [235.5, 249.7, 237.6] #DocDB 20227-v7 using dE/dx calibration method for all planes, updated on 9/13/19 
      wire_spacing : 0.3
      width_box : 1.
      length_box : 4. 
    }
  }
 
  #define the producer and filter modules for this path, order matters, 
  #filters reject all following items.  see lines starting physics.producers below
  #simulate: [rns, eventweight] 
  ana:  [ CCKaonAnalyzerRebuild ]
#  prod:  [ ]
  
  #define the output stream, there could be more than one if using filters 
  stream1:  [ out1 ]

  #trigger_paths is a keyword and contains the paths that modify the art::event, 
  #ie filters and producers

  #trigger_paths: [ simulate ] 
  #end_paths is a keyword and contains the paths that do not modify the art::Event, 
  #ie analyzers and output streams.  these all run simultaneously
  #end_paths:     [ stream1] 
  end_paths:     [ ana ] 
}

#Splines (requires v17)

physics.analyzers.CCKaonAnalyzerRebuild.GenieGenModuleLabel: "generator"
physics.analyzers.CCKaonAnalyzerRebuild.LArG4ModuleLabel: "largeant"
physics.analyzers.CCKaonAnalyzerRebuild.HitsModuleLabel: "gaushit"
physics.analyzers.CCKaonAnalyzerRebuild.HitTruthAssn: "gaushitTruthMatch"
physics.analyzers.CCKaonAnalyzerRebuild.HitShowerAssn: "pandora"
physics.analyzers.CCKaonAnalyzerRebuild.IsMC: true
