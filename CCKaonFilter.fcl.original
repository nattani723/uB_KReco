#include "services_microboone.fcl"
#include "hitfindermodules_microboone.fcl"
#include "filters.fcl"
#include "signalservices_microboone.fcl"
#include "caldata_microboone.fcl"
#include "trackfindermodules_microboone.fcl"
#include "calorimetry_microboone.fcl"
#include "triggeralgo_service.fcl"
#include "photpropservices_microboone.fcl"
#include "particleid_microboone.fcl"
#include "config_particle_identification.fcl"
#include "config_particle_identification_validation.fcl"
#include "config_dedx_calibration.fcl"
#include "calibration_microboone.fcl"
#include "caldata_microboone.fcl"
##include "analysistreemodule_microboone.fcl"

process_name: CCKaonFilter

services:
{
  #Load the service that manages root files for histograms.
  TFileService: { fileName: "CCKaonFilter.root" }
  RandomNumberGenerator: {}                     #ART native random number generator
  @table::microboone_simulation_services
  message:      @local::standard_info
  FileCatalogMetadata: @local::art_file_catalog_mc
}

#source is now a root file
source:
{
  module_type: RootInput
  maxEvents:  -1            # Number of events to create
}

outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "CCKaonFilter.root"    #default file name, can override from command line with -o or --output
   dataTier: "reconstructed"
   fastCloning: false
 } 
}

physics:
{
 producers:{

  }
 filters:  {} 
 analyzers:{
   CCKaonFilter:
   {
   module_type: "CCKaonFilter"
 }
 }
 
 
 #define the producer and filter modules for this path, order matters, 
 #filters reject all following items.  see lines starting physics.producers below
 ana:  [ CCKaonFilter ]
 #ana: []
 
 #define the output stream, there could be more than one if using filters 
 stream1:  [ out1 ]

 #trigger_paths is a keyword and contains the paths that modify the art::event, 
 #ie filters and producers
 #trigger_paths: [reco] 

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 #end_paths:     [ stream1, ana ] 
 end_paths:     [  ana ] 
}

# define the list of LArSoft modules to run through the simulate path

#physics.analyzers.CCKaonFilter:  @local::microboone_CCKaonFilter

#physics.analyzers.CCKaonFilter.TrackModuleLabel:        "pandoraNu::UBXSec"
physics.analyzers.CCKaonFilter.TrackModuleLabel:        "pandora"
#physics.analyzers.CCKaonFilter.CalorimetryModuleLabel:  "dedxcalibration::particleid"
physics.analyzers.CCKaonFilter.CalorimetryModuleLabel:  "pandoracali"
#physics.analyzers.CCKaonFilter.HitsModuleLabel:  "pandoraCosmicHitRemoval::UBXSec"
physics.analyzers.CCKaonFilter.HitsModuleLabel:  "trajcluster"
physics.analyzers.CCKaonFilter.LArG4ModuleLabel: "largeant"
physics.analyzers.CCKaonFilter.PIDLabel: "pid::particleid"
physics.analyzers.CCKaonFilter.POTModuleLabel:"generator"
physics.analyzers.CCKaonFilter.GenieGenModuleLabel:"generator"
#physics.analyzers.CCKaonFilter.ProducerLabels: @local::producerlabels_mcc8_UBXSec_dedxcalib
physics.analyzers.CCKaonFilter.ProducerLabels: @local::producerlabels_mcc9
#physics.analyzers.CCKaonFilter.BraggAlgo: @local::braggalgo_mcc8_dedxcalib
physics.analyzers.CCKaonFilter.BraggAlgo: @local::braggalgo
#physics.analyzers.CCKaonFilter.HitTrackAssn: "pandoraNu::UBXSec"
physics.analyzers.CCKaonFilter.HitTrackAssn: "pandora"
physics.analyzers.CCKaonFilter.HitTruthAssn: "pandoraCosmicHitRemoval::UBXSec"

physics.analyzers.CCKaonFilter.SaveTrackInfo: true
physics.analyzers.CCKaonFilter.SaveCaloInfo: true
physics.analyzers.CCKaonFilter.SaveGenieInfo: true

services.DetectorPropertiesService.NumberTimeSamples:        6400
services.DetectorPropertiesService.ReadOutWindowSize:        6400
services.DetectorClocksService.InheritClockConfig:           false
services.DetectorClocksService.TriggerOffsetTPC:             -0.400e3
source.inputCommands:        [ "keep *_*_*_*", "drop *_opfiltercommon__McRecoStage1" ]
