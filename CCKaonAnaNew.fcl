##include "time_memory_tracker_microboone.fcl"
#include "services_microboone.fcl"
#include "microboone_eventweight_service.fcl"

process_name: CCKaonAnaNew

services:
{
  #Load the service that manages root files for histograms.
  TFileService: { fileName: "CCKaonAnalyzer_new.root" }
  @table::microboone_services_reco
  ##RandomNumberGenerator: {}                     #ART native random number generator
  ##@table::microboone_simulation_services
  #message:                  @local::standard_warning
  #FileCatalogMetadata:      @local::art_file_catalog_mc
  SpaceCharge:              @local::microboone_spacecharge
  DetectorClocksService:    @local::microboone_detectorclocks
  #UBEventWeight:            @local::microboone_eventweight_service
  #NuRandomService: @local::microboone_seedservice

}

services.SpaceCharge.EnableCorrSCE:       true
services.SpaceCharge.EnableSimEfieldSCE:  true
services.SpaceCharge.EnableSimSpatialSCE: true
services.DetectorClocksService.InheritClockConfig: false
services.DetectorClocksService.TriggerOffsetTPC: -0.400e3
services.DetectorPropertiesService.NumberTimeSamples: 6400
services.DetectorPropertiesService.ReadOutWindowSize: 6400

#source is now a root file
source:
{
  module_type: RootInput
  maxEvents:  -1            # Number of events to create
}

source.inputCommands: [ "keep *_*_*_*", "drop *_opfiltercommon__McRecoStage1" ]

outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName: "CCKaonAnalyzerStream.root"    #default file name, can override from command line with -o or --output
   dataTier: "reconstructed"
   fastCloning: false
 } 
}

physics:
{
  producers:
  {
  #eventweight: @local::microboone_eventweight
  #rns: {
     #module_type: "RandomNumberSaver"
   #}

  }

  filters:{} 

  analyzers:
  {
    CCKaonAnaNew:
    {
      module_type: "CCKaonAnaNew"
    }
  }
 
  #define the producer and filter modules for this path, order matters, 
  #filters reject all following items.  see lines starting physics.producers below
  #simulate: [rns, eventweight] 
  ana:  [ CCKaonAnaNew ]
#  prod:  [ ]
  
  #define the output stream, there could be more than one if using filters 
#  stream1:  [ out1 ]

  #trigger_paths is a keyword and contains the paths that modify the art::event, 
  #ie filters and producers

  #trigger_paths: [ simulate ] 
  #end_paths is a keyword and contains the paths that do not modify the art::Event, 
  #ie analyzers and output streams.  these all run simultaneously
  #end_paths:     [ stream1, ana ] 
  end_paths:     [ ana ] 
}

#Splines (requires v17)
physics.analyzers.CCKaonAnaNew.PFParticleLabel: "pandora"
physics.analyzers.CCKaonAnaNew.TrackLabel: "pandora"
physics.analyzers.CCKaonAnaNew.CalorimetryLabel: "pandoracali"
#physics.analyzers.CCKaonAnaNew.GenieGenModuleLabel: "generator"
physics.analyzers.CCKaonAnaNew.LArG4Label: "largeant"
physics.analyzers.CCKaonAnaNew.HitLabel: "gaushit"
physics.analyzers.CCKaonAnaNew.HitTruthAssnLabel: "gaushitTruthMatch"
#physics.analyzers.CCKaonAnaNew.TrackModuleLabel: "pandora" #pandoraAllOutcomesTrack,pandoraKalmanTrack,pandora,pandoraKalmanShower,shrreco3dKalmanShower
physics.analyzers.CCKaonAnaNew.HitTrackAssnLabel: "pandora" #pandoraKalmanTrack,pandora,pandoraAllOutcomesTrack,pandoraKalmanShower,shrreco3dKalmanShower
#physics.analyzers.CCKaonAnaNew.CalorimetryModuleLabel: "pandoracaliSCE" #pandoracali, pandoraKalmanTrackcalo, pandoraKalmanShowercalo, pandoracaloSCE, pandoracaliSCE, pandoraKalmanShowercali, pandoracalo, pandoraKalmanTrackcali, shrreco3dKalmanShowercali, shrreco3dKalmanShowercalo
#physics.analyzers.CCKaonAnaNew.PIDLabel: "pandoracalipidSCE" #pandoracalipidSCE, pandoracalipid, pandoraKalmanTrackpid, pandorapidSCE, pandoraKalmanShowercalipid, pandoraKalmanTrackcalipid, pandorapid, pandoraKalmanShowerpid
#physics.analyzers.CCKaonAnaNew.IsMC: true



